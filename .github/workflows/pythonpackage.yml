name: Python package

on: 
  push:
    branches:
      - DDM-676-py3
  pull_request:
    branches:
      - master
      - dev
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@master
    
    
    - name: Set up Python ${{ matrix.python-version }}
      if: success()
      uses: actions/setup-python@v1
      with:
        version: ${{ matrix.python-version }}
        
        
    - name: Install and run Sonar
      env: 
        SONAR_URL: ${{ secrets.SONAR_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        JOB_NAME: BCDC_tests_build
      run: |
        curl -o sonar.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip
        unzip sonar.zip
        ./sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner -Dsonar.sources=. -Dsonar.projectKey=$JOB_NAME -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions=ve/**,build/**,sonar-scanner-3.2.0.1227-linux/**
        pid_url=$SONAR_URL/api/ce/component?component=$JOB_NAME
        sonar_pid=$(curl $pid_url | jq '.current.id' | tr -d '"')
        aid_url=$SONAR_URL/api/ce/task?id=$sonar_pid
        sonar_aid=$(curl $aid_url | jq '.task.analysisId' | tr -d '"')
        sonar_qg_url=$SONAR_URL/api/qualitygates/project_status?analysisId=$sonar_aid
        sonar_status=$(curl $sonar_qg_url | jq '.projectStatus.status' | tr -d '"')
        if [ "$sonar_status" == "ERROR" ]
            then
                exit 1
        else
            exit 0
        fi
        
    - name: testing something
      env: 
        JOB: ${{ toJson(job) }}
      run:
        echo JOB IS...
        echo $JOB
        exit 1
        
    - name: evaluate pr type
      if: success()
      env: 
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
        pr_closed_merged=false
        event_name=$(echo $GITHUB_CONTEXT | jq '.event_name' | tr -d '"')
        if [[ $event_name = "pull_request" ]];
        then
            # get pr number
            pr_number=$(echo $GITHUB_CONTEXT | jq '.event.number' | tr -d '"')
            action=$(echo $GITHUB_CONTEXT | jq '.event.action' | tr -d '"')
            
            #commit_sha=$(echo $GITHUB_CONTEXT | jq '.sha' | tr -d '"')
            #commit_url=$(echo $GITHUB_CONTEXT | jq  '.event.repository.commits_url' | tr -d '"' | sed  --expression="s/{\/sha}$/\/$commit_sha/g")
            
            if [[ $action = "closed" ]];
            then
                # is it merged
                status_code=$(curl -s -o /dev/null -I -w "%{http_code}" https://api.github.com/repos/bcgov/bcdc-test/pulls/$prnum/merge)
                if [ $status_code -eq  204 ];
                then
                    echo pr number $prnum has been merged
                    pr_closed_merged=true
                fi
            fi
            echo pull request
        fi
        if $pr_closed_merged;
        then
            exit 0
        else
            exit 1
        fi
        repo_url=$(jq '.event.repository.merges_url' | tr -d '"')        
    - name: Build and Upload
      if: success()
      env:
          TWINE_USERNAME:  ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_build.txt
        python --version
        python setup.py sdist bdist_wheel
        python -m twine upload dist/*
        
